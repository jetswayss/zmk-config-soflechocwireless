/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE       &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                   &kp N6  &kp N7          &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB         &kp Q   &kp W     &kp E     &kp R      &kp T                                    &kp Y   &kp U           &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A   &kp S     &kp D     &kp F      &kp G                                    &kp H   &kp J           &kp K      &kp L    &kp SEMI  &kp SQT
&kp ESCAPE      &kp Z   &kp X     &kp C     &kp V      &kp B   &kp C_MUTE    &ext_power EP_TOG  &kp N   &kp M           &kp COMMA  &kp DOT  &kp FSLH  &tog 3
                        &kp LGUI  &kp LALT  &kp LCTRL  &mo 1   &kp SPACE     &kp ENTER          &mo 2   &kp LEFT_SHIFT  &tog 1     &tog 2
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp LC(TAB) LC(LS(TAB))>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp ESCAPE  &kp F1     &kp F2          &kp F3     &kp F4    &kp F5                       &kp F6                &kp F7            &kp F8             &kp F9                 &kp F10   &kp F11
&kp GRAVE   &kp N1     &kp N2          &kp N3     &kp N4    &kp N5                       &kp N6                &kp N7            &kp N8             &kp N9                 &kp N0    &kp F12
&trans      &kp EXCL   &kp AT          &kp HASH   &kp DLLR  &kp PRCNT                    &kp CARET             &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LPAR               &kp RPAR  &kp PIPE
&trans      &kp MINUS  &kp UNDERSCORE  &kp EQUAL  &kp PLUS  &kp RBRC   &trans    &trans  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp BSLH  &trans
                       &trans          &trans     &trans    &trans     &trans    &trans  &trans                &trans            &trans             &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp LC(TAB) LC(LS(TAB))>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &trans            &trans         &trans       &trans             &trans   &kp DELETE
&trans      &kp INS       &trans        &kp UP        &trans        &kp KP_NUMLOCK                    &kp HOME          &kp PAGE_DOWN  &kp PAGE_UP  &kp END            &kp N0   &trans
&trans      &trans        &kp LEFT      &kp DOWN      &kp RIGHT     &kp CLCK                          &kp LEFT          &kp DOWN       &kp UP       &kp RIGHT          &kp DEL  &kp BSPC
&trans      &trans        &trans        &trans        &trans        &trans          &trans    &trans  &kp LC(LG(LEFT))  &kp LG(D)      &kp LG(TAB)  &kp LC(LG(RIGHT))  &trans   &trans
                          &trans        &trans        &trans        &trans          &trans    &trans  &trans            &trans         &trans       &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp LC(TAB) LC(LS(TAB))>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans                    &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans                    &mkp LCLK       &mkp LCLK       &mkp MCLK     &mkp RCLK        &trans  &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans                    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans  &trans    &trans  &msc MOVE_LEFT  &msc MOVE_DOWN  &msc MOVE_UP  &msc MOVE_RIGHT  &trans  &trans
                &trans          &trans          &trans           &trans  &trans    &trans  &trans          &trans          &trans        &trans
            >;
        };
    };
};
